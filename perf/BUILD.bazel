load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load", "oci_push")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

filegroup(
    name = "configs",
    srcs = glob(["configs/*.json"]),
    visibility = ["//perf:__subpackages__"],
)

pkg_tar(
    name = "perfserver_exe",
    srcs = ["//perf/go/perfserver"],
    mode = "755",
    package_dir = "/usr/local/bin/",
    tags = ["manual"],  # Exclude it from wildcard queries, e.g. "bazel build //...".
)

pkg_tar(
    name = "configs_dir",
    srcs = [":configs"],
    mode = "644",
    package_dir = "/usr/local/share/perfserver/configs",
    tags = ["manual"],  # Exclude it from wildcard queries, e.g. "bazel build //...".
)

pkg_tar(
    name = "dist_dir",
    srcs = [
        "//perf/pages:alerts_prod",
        "//perf/pages:clusters2_prod",
        "//perf/pages:dryrunalert_prod",
        "//perf/pages:favorites_prod",
        "//perf/pages:help_prod",
        "//perf/pages:multiexplore_prod",
        "//perf/pages:newindex_prod",
        "//perf/pages:revisions_prod",
        "//perf/pages:triage_prod",
        "//perf/pages:trybot_prod",
    ],
    mode = "644",
    package_dir = "/usr/local/share/perfserver/dist",
    tags = ["manual"],  # Exclude it from wildcard queries, e.g. "bazel build //...".
)

# Note that this macro also produces a target, //perf:perfserver.digest, that
# generates the file `_bazel_bin/perf/perfserver.json.sha256` that contains the
# sha256 of the image.
oci_image(
    name = "perfserver",
    base = "@ubuntu",
    entrypoint = ["/usr/bin/bash"],
    # Link the resulting image back to the repository where the build is defined.
    labels = {
        "org.opencontainers.image.source": "https://github.com/jcgregorio/goldmine/tree/main/perf",
    },
    tars = [
        ":perfserver_exe",
        ":configs_dir",
        ":dist_dir",
    ],
)

# Use this target to build and load the container image into the local image
# registry from where it can be run.
#
# For example:
#
#    $ bazel run //perf:local_perfserver
#    $ docker run -ti perfserver:latest
oci_load(
    name = "local_perfserver",
    image = ":perfserver",
    repo_tags = ["perfserver:latest"],
)

oci_push(
    name = "push",
    image = ":perfserver",
    remote_tags = [
        "latest",
        "24h",
    ],
    repository = "registry/perfserver",
)

# skia_app_container(
#     name = "perfserver",
#     base_image = "@base-cipd//image",
#     dirs = {
#         "/usr/local/bin": [
#             [
#                 "//perf/go/perfserver:perfserver",
#                 "0755",
#             ],
#             [
#                 "//perf/go/perf-tool:perf-tool",
#                 "0755",
#             ],
#         ],
#         "/usr/local/share/skiaperf/configs": [
#             [
#                 ":configs",
#                 "0644",
#             ],
#         ],
#         "/usr/local/share/skiaperf/dist": [
#             [
#                 "//perf/pages:production/%s.%s" % (page, ext),
#                 "0644",
#             ]
#             for page in [
#                 "alerts",
#                 "clusters2",
#                 "dryrunalert",
#                 "help",
#                 "multiexplore",
#                 "newindex",
#                 "triage",
#                 "trybot",
#                 "favorites",
#                 "revisions",
#             ]
#             for ext in [
#                 "css",
#                 "css.map",
#                 "html",
#                 "js",
#                 "js.map",
#             ]
#         ],
#     },
#     entrypoint = "/usr/local/bin/perfserver",
#     repository = "skia-public/perfserver",
# )

# skia_app_container(
#     name = "perf-cockroachdb-backup",
#     base_image = "@cloudsdk//image",
#     default_user = "root",
#     dirs = {
#         "/usr/local/bin": [
#             [
#                 "//perf/go/perf-tool:perf-tool",
#                 "0755",
#             ],
#         ],
#         "/": [
#             [
#                 "//perf/backup:backup.sh",
#                 "0755",
#             ],
#         ],
#         "/usr/local/share/skiaperf/configs": [
#             [
#                 ":configs",
#                 "0644",
#             ],
#         ],
#     },
#     entrypoint = "/backup.sh",
#     repository = "skia-public/perf-cockroachdb-backup",
# )
