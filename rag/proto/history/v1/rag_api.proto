syntax = "proto3";

// Working in progress protobuf and service definition.

package historyrag.v1;

option go_package = "go.skia.org/infra/go/rag/proto/history/v1";

import "google/api/annotations.proto";

// Service definition for the HistoryRag service.
service HistoryRagApiService {
    rpc GetBlames(GetBlamesRequest) returns (GetBlamesResponse) {
        option (google.api.http) = {
			get: "/historyrag/v1/blames"
		};
    }
}

// Request message for the GetBlames api.
message GetBlamesRequest {
    // Path to the file to retrieve blames for.
    string filePath = 1;
}

// Response message for the GetBlames api.
message GetBlamesResponse {
    // File path.
    string filePath = 1;

    // Hash of the file.
    string fileHash = 2;

    // Version of the blame.
    string version = 3;

    // Commit hash for the blame.
	string commitHash = 4;

    // Message defining the line blame data.
    message LineBlame {
        // Line number in the file.
        int64 lineNumber = 1;
        // Commit hash for the line.
        string commitHash = 2;
    }

    // Line blames for the file.
	repeated LineBlame lineBlames = 5;
}
