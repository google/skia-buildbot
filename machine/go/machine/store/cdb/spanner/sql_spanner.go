package spanner

// Generated by //go/sql/exporter/
// DO NOT EDIT

const Schema = `CREATE TABLE IF NOT EXISTS Description (
  maintenance_mode TEXT NOT NULL DEFAULT '',
  is_quarantined BOOL NOT NULL DEFAULT FALSE,
  recovering TEXT NOT NULL DEFAULT '',
  attached_device TEXT NOT NULL DEFAULT 'nodevice',
  annotation JSONB NOT NULL,
  note JSONB NOT NULL,
  version TEXT NOT NULL DEFAULT '',
  powercycle BOOL NOT NULL DEFAULT FALSE,
  powercycle_state TEXT NOT NULL DEFAULT 'not_available',
  last_updated TIMESTAMPTZ NOT NULL,
  battery INT NOT NULL DEFAULT 0,
  temperatures JSONB NOT NULL,
  running_swarmingTask BOOL NOT NULL DEFAULT FALSE,
  launched_swarming BOOL NOT NULL DEFAULT FALSE,
  recovery_start TIMESTAMPTZ NOT NULL,
  device_uptime INT8 DEFAULT 0,
  ssh_user_ip TEXT NOT NULL DEFAULT '',
  supplied_dimensions JSONB NOT NULL,
  dimensions JSONB NOT NULL,
  task_request JSONB,
  task_started TIMESTAMPTZ NOT NULL DEFAULT (0)::TIMESTAMPTZ,
  machine_id TEXT PRIMARY KEY GENERATED ALWAYS AS (dimensions->'id'->>0) STORED,
  running_task bool GENERATED ALWAYS AS (task_request IS NOT NULL) STORED
);
CREATE TABLE IF NOT EXISTS TaskResult (
  result JSONB NOT NULL,
  id TEXT NOT NULL PRIMARY KEY,
  machine_id TEXT NOT NULL,
  finished TIMESTAMPTZ NOT NULL,
  status TEXT NOT NULL DEFAULT ''
);
CREATE INDEX dimensions_gin on Description (dimensions);
CREATE INDEX by_powercycle on Description (powercycle);
CREATE INDEX by_running_task on Description (running_task);
CREATE INDEX by_machine_id on TaskResult (machine_id);
CREATE INDEX by_status on TaskResult (status);
`

var Description = []string{
	"maintenance_mode",
	"is_quarantined",
	"recovering",
	"attached_device",
	"annotation",
	"note",
	"version",
	"powercycle",
	"powercycle_state",
	"last_updated",
	"battery",
	"temperatures",
	"running_swarmingTask",
	"launched_swarming",
	"recovery_start",
	"device_uptime",
	"ssh_user_ip",
	"supplied_dimensions",
	"dimensions",
	"task_request",
	"task_started",
}

var TaskResult = []string{
	"result",
	"id",
	"machine_id",
	"finished",
	"status",
}
