all:
  vars:
    # The user under which we run our services:
    skolo_account: chrome-bot
    # That user's primary group:
    skolo_group: chrome-bot

    win_python3_path: C:\Python39

    all:
      # The port on which each app publishes Prometheus metrics.
      prometheus:
        web_server_port: 8000
        managed_web_server_port: 8002
        alert_to_pubsub_port: 8001
        version: '2.29.1'
        monitoring:
          ports:
            metadata_server_ansible: 20010
            router_backup_ansible: 20011
            powercycle_server_ansible: 20012
            alert_to_pubsub_ansible: 20013
            test_machine_monitor: 20014
            collectd: 20015
            environment_monitor_ansible: 20016

      # The port that the Skolo metadata server is serving on.
      metadata_server_port: 9000

      # The port that the lighttpd file server on each Skolo jumphost is serving on.
      jumphost_file_server: 3333

      # The root of the skiabot repo.
      repo_root: '{{ inventory_dir }}/../../'

  children:
    jumphosts:
      hosts:
        rack5:
          install_metadata_server__service_account_name: chrome-swarming-bots
          copy_authorized_keys__jumphost: skip
      vars:
        copy_service_account_key__project: skia-public
        copy_service_account_key__name: skolo-jumphost

    routers:
      hosts:
        router-rack5:
          copy_authorized_keys__jumphost: rack5
      vars:
        ansible_user: admin
        skolo_account: admin

    gapid_test_machines:
      children:
        rack5_linux_gapid:
      vars:
        swarming_needs__needs_mobile_tools: true
        install_test_machine_monitor__start_swarming: true
        install_test_machine_monitor__run_under_desktop: false
        copy_authorized_keys__jumphost: rack5

    eskia_test_machines:
      children:
        rack5_linux_eskia:
        rack5_rpi_eskia:
      vars:
        install_test_machine_monitor__start_swarming: true
        install_test_machine_monitor__run_under_desktop: false
        copy_authorized_keys__jumphost: rack5

    switchboard_rpis:
      children:
        rack5_rpi_eskia:

    fleet_rpis:
      hosts:
        skia-rpi3-[000:999]:

    rack5_machines:
      children:
        rack5_linux_gapid:
        rack5_linux_eskia:
        rack5_rpi_eskia:

    rack5_linux_gapid:
      hosts:
        skia-i-gapid-[001:004]:

    rack5_linux_eskia:
      hosts:
        skia-i-eskia[01:02]:

    rack5_rpi_eskia:
      hosts:
        skia-i-rpi-[001:004]:

    skolo:
      children:
        jumphosts:
        routers:
        rack5_machines:
      vars:
        zone: skolo

        # URL of the metadata server that provides service account tokens.
        #
        # On Windows, hostnames without a domain need a dot at the end in order to be correctly
        # resolved. All OSes correctly resolve hostnames ending with a dot. See
        # https://skia-review.googlesource.com/c/buildbot/+/588718.
        #
        # We hardcode the port in this URL, rather than using the all.metadata_server_port variable
        # defined above, because doing so produces a "recursive loop detected in template" error. See
        # https://github.com/ansible/ansible/issues/8603.
        metadata_url: 'http://metadata.:9000/computeMetadata/v1/instance/service-accounts/default/token'

    gce_linux:
      hosts:
        skia-e-gce-[100:171]:
        skia-e-gce-[200:249]:
        skia-e-gce-[300:330]:
        skia-e-gce-[400:403]:
        skia-e-gce-[405:408]:
        skia-i-gce-100:
        skia-i-gce-[200:204]:
        skia-d-gce-[100:522]:

    gce_win:
      hosts:
        skia-e-gce-[500:524]:
        skia-e-gce-[600:614]:

    gce:
      children:
        gce_linux:
        gce_win:
      vars:
        zone: gce

        # URL of the metadata server that provides service account tokens.
        metadata_url: 'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'

    all_linux:
      children:
        skolo_linux:
        gce_linux:
      vars:
        swarming_needs__needs_mobile_tools: false
        install_test_machine_monitor__start_swarming: true

    all_mac:
      children:
        skolo_mac:

    all_win:
      children:
        skolo_win:
        gce_win:
      vars:
        ansible_shell_type: powershell
        install_test_machine_monitor__start_swarming: true
