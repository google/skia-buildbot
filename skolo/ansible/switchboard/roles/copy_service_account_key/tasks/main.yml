- name:
    make temp directory for service account key and trigger `clean_up_tempfile`.
  delegate_to: 127.0.0.1
  tempfile:
    state: directory
  register: service_account_key
  notify: clean_up_tempfile

- name: Extract service account key
  delegate_to: 127.0.0.1
  command:
    argv:
      - '{{ all.repo_root }}/kube/secrets/download-service-account-key.sh'
      - '{{ copy_service_account_key__project }}'
      - '{{ copy_service_account_key__name }}'
      - '{{ service_account_key.path }}/application_default_credentials.json'
    creates:
      '{{ service_account_key.path }}/application_default_credentials.json'

# We don't copy the service account key to GCE machines because it prevents Bazel from
# authenticating against RBE. Specifically, when flag --google_default_credentials is passed, Bazel
# will use file ~/.config/gcloud/application_default_credentials.json as its credentials instead of
# the service account associated with the GCE machine.
- name: Copy service account key posix.
  import_tasks: posix.yml
  when: ansible_facts['system']|lower in ['linux', 'darwin'] and zone == 'skolo'

- name: Copy service account key win.
  import_tasks: win.yml
  when: ansible_facts['system']|lower == 'win32nt'
