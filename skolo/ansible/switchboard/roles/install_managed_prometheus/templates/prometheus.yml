global:
  scrape_interval:     15s
  evaluation_interval: 15s

  external_labels:
    cluster: skolo-{{ inventory_hostname }}

alerting:
  alertmanagers:
    - api_version: v1
      static_configs:
      - targets:
        - localhost:{{ all.prometheus.alert_to_pubsub_port }}

rule_files:
  - "alerts.yml"

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:{{ all.prometheus.managed_web_server_port }}']
        labels:
          job: 'prometheus'
          hostname: 'jumphost'
      - targets: ['localhost:{{ all.prometheus.monitoring.ports.metadata_server_ansible  }}']
        labels:
          job: 'metadata_server_ansible'
          hostname: 'jumphost'
      - targets: ['localhost:{{ all.prometheus.monitoring.ports.router_backup_ansible  }}']
        labels:
          job: 'router_backup_ansible'
          hostname: 'jumphost'
      - targets: ['localhost:{{ all.prometheus.monitoring.ports.powercycle_server_ansible  }}']
        labels:
          job: 'powercycle_server_ansible'
          hostname: 'jumphost'
      - targets: ['localhost:{{ all.prometheus.monitoring.ports.alert_to_pubsub_ansible  }}']
        labels:
          job: 'alert_to_pubsub_ansible'
          hostname: 'jumphost'
{% if install_environment_monitor__needs_environment_monitor is defined and install_environment_monitor__needs_environment_monitor is true %}
      - targets: ['localhost:{{ all.prometheus.monitoring.ports.environment_monitor_ansible  }}']
        labels:
          job: 'environment_monitor_ansible'
          hostname: 'jumphost'
{% endif %}
  - job_name: 'test_machines'
    static_configs:
{% for hostname in hostvars['rack5']['groups'][inventory_hostname + '_machines'] %}
      - targets: ['{{ hostname }}:{{ all.prometheus.monitoring.ports.test_machine_monitor }}']
        labels:
          job: 'test_machine_monitor'
          hostname: '{{ hostname }}'
{% endfor %}
